@model IEnumerable<ContosoSite.Models.Activity>
@using ContosoSite.Controllers;

@{
    ViewBag.Title = "Index";
}

<br />
<br />
<br />
<button type="button"  class="btn btn-success btn-lg">Display Data</button>
<br />
<br />


<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.ActivityName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Latitude)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Longitude)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ActivityTime)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ActivityDescription)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.ActivityName)
        </td>
        <td data-toggle="modal" data-target="#myModal">
            @Html.DisplayFor(modelItem => item.Latitude)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Longitude)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ActivityTime)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ActivityDescription)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id = item.ActivityID }) |
            @Html.ActionLink("Details", "Details", new { id = item.ActivityID }) |
            @Html.ActionLink("Delete", "Delete", new { id = item.ActivityID })
        </td>
    </tr>
}

</table>


<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.2.1/Chart.min.js"></script>

<br />
<br />
<br />
<br />
<button type="button" class="btn btn-success btn-lg">Pie Chart</button>
<canvas id="myChart2" width="400" height="400"></canvas>
<script>

var ctx = document.getElementById("myChart2");
var myPieChart = new Chart(ctx,{
    type: 'pie',
    data : {
        labels: [
            "Chatting",
            "Eating",
            "Sleeping"
        ],
        datasets: [
            {
                data: [@{Html.RenderAction("CountActivity", "Activities", new { activityname = "chatting" });},
                    @{Html.RenderAction("CountActivity", "Activities", new { activityname = "eating" });},
                    @{Html.RenderAction("CountActivity", "Activities", new { activityname = "sleeping" });}],
                backgroundColor: [
                    "#FF6384",
                    "#36A2EB",
                    "#FFCE56"
                ],
                hoverBackgroundColor: [
                    "#FF6384",
                    "#36A2EB",
                    "#FFCE56"
                ]
            }]
    },
    options: {
        scales: {
            yAxes: [{
                ticks: {
                    beginAtZero:true
                }
            }]
        }
    }
});
</script>




<br />
<br />
<br />
<br />
<button type="button" class="btn btn-success btn-lg">Bar Chart</button>
<canvas id="myChart" width="400" height="400"></canvas>
<script>

var ctx = document.getElementById("myChart");
var myChart = new Chart(ctx, {
    type: 'bar',
    data: {
        labels: ["@Model.First().ActivityName", "Eating", "Sleeping"],
        datasets: [{
            label: '# of Votes',
            data: [@{Html.RenderAction("CountActivity", "Activities", new { activityname = "chatting" });},
                @{Html.RenderAction("CountActivity", "Activities", new { activityname = "eating" });},
                @{Html.RenderAction("CountActivity", "Activities", new { activityname = "sleeping" });}
                ],
            backgroundColor: [
                'rgba(255, 99, 132, 0.2)',
                'rgba(54, 162, 235, 0.2)',
                'rgba(255, 206, 86, 0.2)',
                'rgba(75, 192, 192, 0.2)',
                'rgba(153, 102, 255, 0.2)',
                'rgba(255, 159, 64, 0.2)'
            ],
            borderColor: [
                'rgba(255,99,132,1)',
                'rgba(54, 162, 235, 1)',
                'rgba(255, 206, 86, 1)',
                'rgba(75, 192, 192, 1)',
                'rgba(153, 102, 255, 1)',
                'rgba(255, 159, 64, 1)'
            ],
            borderWidth: 1
        }]
    },
    options: {
        scales: {
            yAxes: [{
                ticks: {
                    beginAtZero:true
                }
            }]
        }
    }
});
</script>


<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBRG0NRG3-AVehCqL9_7F4nanSJTH06P1U&callback=initMap"
        async defer></script>

<script>
      var map;
      function initMap() {
        map = new google.maps.Map(document.getElementById('map'), {
          center: {lat: 42.0308, lng: 93.6319},
          zoom: 8
        });
      }
</script>

<style>
    html, body {
        height: 100%;
        margin: 0;
        padding: 0;
    }

    #map {
        height: 100%;
    }
</style>

<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Modal title</h4>
            </div>
            <div class="modal-body">
                <div id="map"></div>
                <h1>Hello, this works</h1>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary">Save changes</button>
            </div>
        </div>
    </div>
</div>













