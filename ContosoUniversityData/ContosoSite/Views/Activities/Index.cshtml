@model IEnumerable<ContosoSite.Models.Activity>
@using ContosoSite.Controllers;

@{
    ViewBag.Title = "Index";
}
@Scripts.Render("~/bundles/jquery")

<script src="http://maps.google.com/maps/api/js?sensor=true" type="text/javascript"></script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBRG0NRG3-AVehCqL9_7F4nanSJTH06P1U&callback=initMap"
        async defer></script>

<br />
<br />

<div class="dropdown">
    <button class="btn btn-primary dropdown-toggle btn-lg" id="menu1" type="button" data-toggle="dropdown">
        Reports
        <span class="caret"></span>
    </button>
    <ul class="dropdown-menu" role="menu" aria-labelledby="menu1">
        <li role="presentation"><a role="menuitem" tabindex="-1" href="#">Daily Report</a></li>
        <li role="presentation"><a role="menuitem" tabindex="-1" href="#">Weekly Report</a></li>
        <li role="presentation"><a role="menuitem" tabindex="-1" href="#">Monthly Report</a></li>
        <li role="presentation" class="divider"></li>
        <li role="presentation"><a role="menuitem" tabindex="-1" href="#">About Us</a></li>
    </ul>
</div>



<br />


<div class="dropdown">
    <button class="btn btn-success dropdown-toggle btn-lg" id="menu1" type="button" data-toggle="dropdown">
        Display Data
        <span class="caret"></span>
    </button>
    <ul class="dropdown-menu" role="menu" aria-labelledby="menu1">
        <li role="presentation" onclick="showBar()"><a role="menuitem" tabindex="-1" href="#display_bar">Bar Chart</a></li>
        <li role="presentation" onclick="showPie()"><a role="menuitem" tabindex="-1" href="#display_pie">Pie Chart</a></li>
        <li role="presentation"><a role="menuitem" tabindex="-1" href="#">Chart</a></li>
        <li role="presentation" class="divider"></li>
        <li role="presentation"><a role="menuitem" tabindex="-1" href="#">About Us</a></li>
    </ul>
</div>

<script type="text/javascript">
    function showBar()
    {
        $("#display_bar").show();
    }

    function showPie()
    {
        $("#display_pie").show();
    }
</script>
<br />
<br />


<div class="alert alert-warning alert-dismissible fade in" role="alert">
    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
        <span aria-hidden="true">x</span>
    </button>
    <strong>
        Hello!
    </strong>
    Welcome to visit the ADL activities.
</div>

<div class="alert alert-info alert-dismissible fade in" role="alert">
    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
        <span aria-hidden="true">x</span>
    </button>
    <strong>
        Hello!
    </strong>
    The following is AJAX call.
</div>

<div class="alert alert-success alert-dismissible fade in" role="alert">
    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
        <span aria-hidden="true">x</span>
    </button>
    <strong>
        Hello!
    </strong>
    <span id="change_content">This will be change later.</span>
</div>


<button type="button" id="ajax_call" class="btn btn-danger btn-lg">AJAX Call</button>

<br />
<br />








<input type="text" id="input_text_value" placeholder="Enter the content" />
<br />
<br />
<button type="button" id="ajax_call_text" class="btn btn-warning btn-lg">AJAX Call from input text</button>
<br />
<br />

<div class="alert alert-danger alert-dismissible fade in" role="alert">
    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
        <span aria-hidden="true">x</span>
    </button>
    <strong>
        Hello!
    </strong>
    <span id="span_text">If you type "test", this will be change to "awesome", otherwise, it will be changed to what you type in text box</span>
</div>

<script>
    $("#ajax_call").click(function(){
        $.ajax({
            url: "/Activities/Ajax",
            success:function(response)
            {
                $("#change_content").text("This is new content after Ajax call");
            }
        });
    })
</script>



<script>
    $("#ajax_call_text").click(function(){
        $.ajax({
            url: "/Activities/AjaxText?text=" + $("#input_text_value").val(),
            success:function(response)
            {
                if(response == "test")
                {
                    $("#span_text").text("Awesome");
                }
                else
                {
                    $("#span_text").text($("#input_text_value").val());
                }
                
            }
        });
    })
</script>

<br />
<br />


<hr />
<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>

        </th>
        <th>
            @Html.DisplayNameFor(model => model.ActivityName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Latitude)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Longitude)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ActivityTime)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ActivityDescription)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            <a  class="btn btn-info btn-lg" onclick="location.href='@Url.Action("Map", "Activities")'">
                <span class="glyphicon glyphicon-map-marker"></span> Map
            </a>
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ActivityName)
        </td>
        <td data-toggle="modal" data-target="#myModal">
            @Html.DisplayFor(modelItem => item.Latitude)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Longitude)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ActivityTime)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ActivityDescription)
        </td>
        <td>
            <button type="button" class="btn btn-success btn-lg">@Html.ActionLink("Edit", "Edit", new { id = item.ActivityID })  </button> |
            <button type="button" class="btn btn-info btn-lg">@Html.ActionLink("Details", "Details", new { id = item.ActivityID }) </button> |
            <button type="button" class="btn btn-danger btn-lg">@Html.ActionLink("Delete", "Delete", new { id = item.ActivityID })</button>
        </td>
    </tr>
}

</table>


<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.2.1/Chart.min.js"></script>

<br />
<br />
<br />
<br />
<hr />
<div width="100%" height="100%" align="center" valign="center" hidden="true" id="display_pie">
    <button type="button" class="btn btn-success btn-lg">Pie Chart</button>
    <canvas id="myChart2" width="200" height="200"></canvas>
</div>





<script>
var ctx = document.getElementById("myChart2");
var myPieChart = new Chart(ctx,{
    type: 'pie',
    data : {
        labels: [
            "Chatting",
            "Eating",
            "Sleeping"
        ],
        datasets: [
            {
                data: [@{Html.RenderAction("CountActivity", "Activities", new { activityname = "chatting" });},
                    @{Html.RenderAction("CountActivity", "Activities", new { activityname = "eating" });},
                    @{Html.RenderAction("CountActivity", "Activities", new { activityname = "sleeping" });}],
                backgroundColor: [
                    "#FF6384",
                    "#36A2EB",
                    "#FFCE56"
                ],
                hoverBackgroundColor: [
                    "#FF6384",
                    "#36A2EB",
                    "#FFCE56"
                ]
            }]
    },
    options: {
        scales: {
            yAxes: [{
                ticks: {
                    beginAtZero:true
                }
            }]
        }
    }
});
</script>




<br />
<br />
<br />
<br />
<hr />
<div width="100%" height="100%" align="center" valign="center" id="display_bar" hidden="true">
    <button type="button" class="btn btn-success btn-lg">Bar Chart</button>
    <canvas id="myChart" width="400" height="400"></canvas>
</div>
<script>

var ctx = document.getElementById("myChart");
var myChart = new Chart(ctx, {
    type: 'bar',
    data: {
        labels: ["@Model.First().ActivityName", "Eating", "Sleeping"],
        datasets: [{
            label: '# of Votes',
            data: [@{Html.RenderAction("CountActivity", "Activities", new { activityname = "chatting" });},
                @{Html.RenderAction("CountActivity", "Activities", new { activityname = "eating" });},
                @{Html.RenderAction("CountActivity", "Activities", new { activityname = "sleeping" });}
                ],
            backgroundColor: [
                'rgba(255, 99, 132, 0.2)',
                'rgba(54, 162, 235, 0.2)',
                'rgba(255, 206, 86, 0.2)',
                'rgba(75, 192, 192, 0.2)',
                'rgba(153, 102, 255, 0.2)',
                'rgba(255, 159, 64, 0.2)'
            ],
            borderColor: [
                'rgba(255,99,132,1)',
                'rgba(54, 162, 235, 1)',
                'rgba(255, 206, 86, 1)',
                'rgba(75, 192, 192, 1)',
                'rgba(153, 102, 255, 1)',
                'rgba(255, 159, 64, 1)'
            ],
            borderWidth: 1
        }]
    },
    options: {
        scales: {
            yAxes: [{
                ticks: {
                    beginAtZero:true
                }
            }]
        }
    }
});
</script>



<style>
    #map_canvas img {
        max-width: none;
    }
</style>

<!-- This css is to give a nice big popup "info window" when a marker is clicked on the map -->
<style>
    .infoDiv {
        height: 200px;
        width: 300px;
        -webkit-user-select: none;
        background-color: white;
    }
</style>
<br />



<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Modal title</h4>
            </div>
            <div class="modal-body">
                <div id="map_canvas" style="height: 550px;"></div>
                <h1>Hello, this works</h1>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary">Save changes</button>
            </div>
        </div>
    </div>
</div>



<!-- Enclose the Javascript in a "section" so that it is rendered in the correct order after scripts have been loaded etc -->
@section scripts {
    <section class="scripts">

        <script type="text/javascript">

    <!-- This code tells the browser to execute the "Initialize" method only when the complete document model has been loaded. -->
    $(document).ready(function () {
        Initialize();
    });

    // Where all the fun happens
    function Initialize() {

        // Google has tweaked their interface somewhat - this tells the api to use that new UI
        google.maps.visualRefresh = true;
        var Tunisie = new google.maps.LatLng(36.81881, 10.16596);

        // These are options that set initial zoom level, where the map is centered globally to start, and the type of map to show
        var mapOptions = {
            zoom: 8,
            center: Tunisie,
            mapTypeId: google.maps.MapTypeId.G_NORMAL_MAP
        };

        // This makes the div with id "map_canvas" a google map
        var map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);

        // a sample list of JSON encoded data of places to visit in Tunisia
        // you can either make up a JSON list server side, or call it from a controller using JSONResult
        var data = [
                  { "Id": 1, "PlaceName": "Zaghouan", "GeoLong": "36.401081", "GeoLat": "10.16596" },
                  { "Id": 2, "PlaceName": "Hammamet ", "GeoLong": "36.4", "GeoLat": "10.616667" },
                  { "Id": 3, "PlaceName": "Sousse", "GeoLong": "35.8329809", "GeoLat": "10.63875" },
                  { "Id": 4, "PlaceName": "Sfax", "GeoLong": "34.745159", "GeoLat": "10.7613" }
               ];

        // Using the JQuery "each" selector to iterate through the JSON list and drop marker pins
        $.each(data, function (i, item) {
            var marker = new google.maps.Marker({
                'position': new google.maps.LatLng(item.GeoLong, item.GeoLat),
                'map': map,
                'title': item.PlaceName
            });

            // Make the marker-pin blue!
            marker.setIcon('http://maps.google.com/mapfiles/ms/icons/blue-dot.png')

            // put in some information about each json object - in this case, the opening hours.
            var infowindow = new google.maps.InfoWindow({
                content: "<div class='infoDiv'><h2>" + item.PlaceName + "</div></div>"
            });

            // finally hook up an "OnClick" listener to the map so it pops up out info-window when the marker-pin is clicked!
            google.maps.event.addListener(marker, 'click', function () {
                infowindow.open(map, marker);
            });

        })
    }


        </script>
    </section>
}







