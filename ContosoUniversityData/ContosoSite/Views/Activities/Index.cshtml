@model IEnumerable<ContosoSite.Models.Activity>
@using ContosoSite.Controllers;

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.ActivityName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ActivityTime)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ActivityDescription)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.ActivityName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ActivityTime)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ActivityDescription)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id = item.ActivityID }) |
            @Html.ActionLink("Details", "Details", new { id = item.ActivityID }) |
            @Html.ActionLink("Delete", "Delete", new { id = item.ActivityID })
        </td>
    </tr>
}

</table>




<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.2.1/Chart.min.js"></script>

<canvas id="myChart" width="400" height="400"></canvas>
<script>

var ctx = document.getElementById("myChart");
var myChart = new Chart(ctx, {
    type: 'bar',
    data: {
        labels: ["@Model.First().ActivityName", "Blue", "Yellow", "Green", "Purple", "Orange"],
        datasets: [{
            label: '# of Votes',
            data: [@{Html.RenderAction("CountActivity", "Activities", new { activityname = "chatting" });},
                @{Html.RenderAction("CountActivity", "Activities", new { activityname = "eating" });},
                16, 20, 15, 14],
            backgroundColor: [
                'rgba(255, 99, 132, 0.2)',
                'rgba(54, 162, 235, 0.2)',
                'rgba(255, 206, 86, 0.2)',
                'rgba(75, 192, 192, 0.2)',
                'rgba(153, 102, 255, 0.2)',
                'rgba(255, 159, 64, 0.2)'
            ],
            borderColor: [
                'rgba(255,99,132,1)',
                'rgba(54, 162, 235, 1)',
                'rgba(255, 206, 86, 1)',
                'rgba(75, 192, 192, 1)',
                'rgba(153, 102, 255, 1)',
                'rgba(255, 159, 64, 1)'
            ],
            borderWidth: 1
        }]
    },
    options: {
        scales: {
            yAxes: [{
                ticks: {
                    beginAtZero:true
                }
            }]
        }
    }
});
</script>